name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: pyinstaller --onefile --windowed --name "my-app-${{ matrix.os }}" app.py

    # --- THIS IS THE NEW STEP FOR MACOS ---
    - name: Package the macOS App into a Zip file
      # This step only runs on the macOS virtual environment
      if: runner.os == 'macOS'
      # The zip command compresses the .app directory into a .zip file
      run: zip -r "dist/my-app-macos-latest.zip" "dist/my-app-macos-latest.app"
    # ------------------------------------

    - name: Upload executable as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app-${{ matrix.os }}
        # --- THE PATH IS UPDATED TO FIND THE NEW .zip FILE ---
        path: |
          dist/*.exe
          dist/*.zip
          dist/my-app-ubuntu-latest
        # ----------------------------------------------------

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
